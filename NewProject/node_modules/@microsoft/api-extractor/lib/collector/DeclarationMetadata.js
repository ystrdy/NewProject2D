"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const api_extractor_model_1 = require("@microsoft/api-extractor-model");
const VisitorState_1 = require("./VisitorState");
class DeclarationMetadata {
    constructor() {
        /**
         * This is the original TSDoc comment parsed from the source code.
         * It may be modified (or constructed artificially) by the DocCommentEnhancer.
         */
        this.tsdocComment = undefined;
        /**
         * The ParserContext from when the TSDoc comment was parsed from the source code.
         * If the source code did not contain a doc comment, then this will be undefined.
         */
        this.tsdocParserContext = undefined;
        /**
         * This is the release tag that was explicitly specified in the original doc comment, if any.
         * Compare with SymbolMetadata.releaseTag, which is the effective release tag, possibly inherited from
         * a parent.
         */
        this.declaredReleaseTag = api_extractor_model_1.ReleaseTag.None;
        // NOTE: In the future, the Collector may infer or error-correct some of these states.
        // Generators should rely on these instead of tsdocComment.modifierTagSet.
        this.isEventProperty = false;
        this.isOverride = false;
        this.isSealed = false;
        this.isVirtual = false;
        this.isPreapproved = false;
        // Assigned by DocCommentEnhancer
        this.needsDocumentation = true;
        this.docCommentEnhancerVisitorState = VisitorState_1.VisitorState.Unvisited;
    }
}
exports.DeclarationMetadata = DeclarationMetadata;
//# sourceMappingURL=DeclarationMetadata.js.map