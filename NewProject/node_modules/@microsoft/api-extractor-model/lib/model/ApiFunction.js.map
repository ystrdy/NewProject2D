{"version":3,"file":"ApiFunction.js","sourceRoot":"","sources":["../../src/model/ApiFunction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAG3D,8DAAoF;AACpF,2EAAuG;AACvG,qEAA8F;AAC9F,qEAA8F;AAC9F,yDAA4E;AAC5E,mFAAmH;AAenH;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,MAAa,WAAY,SAAQ,2BAAY,CAAC,qDAAyB,CAAC,6CAAqB,CAAC,uCAAkB,CAC9G,uCAAkB,CAAC,iCAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhC,MAAM,CAAC,qBAAqB,CAAC,IAAY,EAAE,aAAqB;QACrE,OAAO,IAAI,IAAI,IAAI,aAAa,GAAG,CAAC;IACtC,CAAC;IAED,YAAmB,OAA4B;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,iCAA4B;IAC9B,CAAC;IAED,gBAAgB;IAChB,IAAW,kBAAkB;QAC3B,OAAO,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1E,CAAC;CACF;AApBD,kCAoBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { ApiItemKind } from '../items/ApiItem';\r\nimport { IApiDeclaredItemOptions, ApiDeclaredItem } from '../items/ApiDeclaredItem';\r\nimport { IApiParameterListMixinOptions, ApiParameterListMixin } from '../mixins/ApiParameterListMixin';\r\nimport { IApiReleaseTagMixinOptions, ApiReleaseTagMixin } from '../mixins/ApiReleaseTagMixin';\r\nimport { IApiReturnTypeMixinOptions, ApiReturnTypeMixin } from '../mixins/ApiReturnTypeMixin';\r\nimport { IApiNameMixinOptions, ApiNameMixin } from '../mixins/ApiNameMixin';\r\nimport { IApiTypeParameterListMixinOptions, ApiTypeParameterListMixin } from '../mixins/ApiTypeParameterListMixin';\r\n\r\n/**\r\n * Constructor options for {@link ApiFunction}.\r\n * @public\r\n */\r\nexport interface IApiFunctionOptions extends\r\n  IApiNameMixinOptions,\r\n  IApiTypeParameterListMixinOptions,\r\n  IApiParameterListMixinOptions,\r\n  IApiReleaseTagMixinOptions,\r\n  IApiReturnTypeMixinOptions,\r\n  IApiDeclaredItemOptions {\r\n}\r\n\r\n/**\r\n * Represents a TypeScript function declaration.\r\n *\r\n * @remarks\r\n *\r\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\r\n * API declarations.\r\n *\r\n * `ApiFunction` represents a TypeScript declaration such as this example:\r\n *\r\n * ```ts\r\n * export function getAverage(x: number, y: number): number {\r\n *   return (x + y) / 2.0;\r\n * }\r\n * ```\r\n *\r\n * Functions are exported by an entry point module or by a namespace.  Compare with {@link ApiMethod}, which\r\n * represents a function that is a member of a class.\r\n *\r\n * @public\r\n */\r\nexport class ApiFunction extends ApiNameMixin(ApiTypeParameterListMixin(ApiParameterListMixin(ApiReleaseTagMixin(\r\n  ApiReturnTypeMixin(ApiDeclaredItem))))) {\r\n\r\n  public static getCanonicalReference(name: string, overloadIndex: number): string {\r\n    return `(${name}:${overloadIndex})`;\r\n  }\r\n\r\n  public constructor(options: IApiFunctionOptions) {\r\n    super(options);\r\n  }\r\n\r\n  /** @override */\r\n  public get kind(): ApiItemKind {\r\n    return ApiItemKind.Function;\r\n  }\r\n\r\n  /** @override */\r\n  public get canonicalReference(): string {\r\n    return ApiFunction.getCanonicalReference(this.name, this.overloadIndex);\r\n  }\r\n}\r\n"]}