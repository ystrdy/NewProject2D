{"version":3,"file":"ApiVariable.js","sourceRoot":"","sources":["../../src/model/ApiVariable.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAG3D,8DAA0G;AAC1G,qEAA8F;AAC9F,yDAA4E;AAoB5E;;;;;;;;;;;;;;;;;;;GAmBG;AACH,MAAa,WAAY,SAAQ,2BAAY,CAAC,uCAAkB,CAAC,iCAAe,CAAC,CAAC;IAMhF,gBAAgB;IACT,MAAM,CAAC,iBAAiB,CAAC,OAAqC,EAAE,OAA4B,EACjG,UAA4B;QAE5B,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QAEtD,OAAO,CAAC,sBAAsB,GAAG,UAAU,CAAC,sBAAsB,CAAC;IACrE,CAAC;IAEM,MAAM,CAAC,qBAAqB,CAAC,IAAY;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAmB,OAA4B;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC/E,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,iCAA4B;IAC9B,CAAC;IAED,gBAAgB;IAChB,IAAW,kBAAkB;QAC3B,OAAO,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,gBAAgB;IACT,aAAa,CAAC,UAAqC;QACxD,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAEhC,UAAU,CAAC,sBAAsB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;IAC1E,CAAC;CACF;AAzCD,kCAyCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { ApiItemKind } from '../items/ApiItem';\r\nimport { ApiDeclaredItem, IApiDeclaredItemOptions, IApiDeclaredItemJson } from '../items/ApiDeclaredItem';\r\nimport { ApiReleaseTagMixin, IApiReleaseTagMixinOptions } from '../mixins/ApiReleaseTagMixin';\r\nimport { IApiNameMixinOptions, ApiNameMixin } from '../mixins/ApiNameMixin';\r\nimport { IExcerptTokenRange, Excerpt } from '../mixins/Excerpt';\r\nimport { DeserializerContext } from './DeserializerContext';\r\n\r\n/**\r\n * Constructor options for {@link ApiVariable}.\r\n * @public\r\n */\r\nexport interface IApiVariableOptions extends\r\n  IApiNameMixinOptions,\r\n  IApiReleaseTagMixinOptions,\r\n  IApiDeclaredItemOptions {\r\n\r\n  variableTypeTokenRange: IExcerptTokenRange;\r\n}\r\n\r\nexport interface IApiVariableJson extends IApiDeclaredItemJson {\r\n  variableTypeTokenRange: IExcerptTokenRange;\r\n}\r\n\r\n/**\r\n * Represents a TypeScript variable declaration.\r\n *\r\n * @remarks\r\n *\r\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\r\n * API declarations.\r\n *\r\n * `ApiVariable` represents an exported `const` or `let` object such as these examples:\r\n *\r\n * ```ts\r\n * // A variable declaration\r\n * export let verboseLogging: boolean;\r\n *\r\n * // A constant variable declaration with an initializer\r\n * export const canvas: IWidget = createCanvas();\r\n * ```\r\n *\r\n * @public\r\n */\r\nexport class ApiVariable extends ApiNameMixin(ApiReleaseTagMixin(ApiDeclaredItem)) {\r\n  /**\r\n   * An {@link Excerpt} that describes the type of the variable.\r\n   */\r\n  public readonly variableTypeExcerpt: Excerpt;\r\n\r\n  /** @override */\r\n  public static onDeserializeInto(options: Partial<IApiVariableOptions>, context: DeserializerContext,\r\n    jsonObject: IApiVariableJson): void {\r\n\r\n    super.onDeserializeInto(options, context, jsonObject);\r\n\r\n    options.variableTypeTokenRange = jsonObject.variableTypeTokenRange;\r\n  }\r\n\r\n  public static getCanonicalReference(name: string): string {\r\n    return name;\r\n  }\r\n\r\n  public constructor(options: IApiVariableOptions) {\r\n    super(options);\r\n\r\n    this.variableTypeExcerpt = this.buildExcerpt(options.variableTypeTokenRange);\r\n  }\r\n\r\n  /** @override */\r\n  public get kind(): ApiItemKind {\r\n    return ApiItemKind.Variable;\r\n  }\r\n\r\n  /** @override */\r\n  public get canonicalReference(): string {\r\n    return ApiVariable.getCanonicalReference(this.name);\r\n  }\r\n\r\n  /** @override */\r\n  public serializeInto(jsonObject: Partial<IApiVariableJson>): void {\r\n    super.serializeInto(jsonObject);\r\n\r\n    jsonObject.variableTypeTokenRange = this.variableTypeExcerpt.tokenRange;\r\n  }\r\n}\r\n"]}