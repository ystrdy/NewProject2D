
const fs = require('fs');
const path = require("path");
const os = require('os');

function readData(): { [name: string]: string } {
    try {
        const cacheFileName = path.join(os.homedir(), '.egretpro', 'engines.json');
        const content = fs.readFileSync(cacheFileName, 'utf-8');
        return JSON.parse(content);
    } catch (error) {
        throw new Error('engines.json解析失败');
    }
}

function writeData(data: any) {
    const cacheDirector = path.join(os.homedir(), '.egretpro');
    if (!fs.existsSync(cacheDirector)) {
        fs.mkdirSync(cacheDirector);
    }
    const cacheFileName = path.join(os.homedir(), '.egretpro', 'engines.json');
    const text = JSON.stringify(data, null, 4);
    fs.writeFileSync(cacheFileName, text, 'utf-8');
}

export function getEngineRoot(name: string) {
    const data = readData();
    if (!data) {
        return null;
    }
    if (!data[name]) {
        return null;
    }
    return data[name];
}

export function setEngineRoot(name: string, root: string) {
    if (path.isAbsolute(root)) {
        let data = readData();
        if (!data) {
            data = {};
        }
        data[name] = root;
        writeData(data);
    }
    else {
        throw new Error('root 必须是绝对路径');
    }

}

export function getEngineList() {
    const result = [];
    const json = readData();
    for (const key in json) {
        result.push({ name: key, path: json[key] });
    }
    return result;
}